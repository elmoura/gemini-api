# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OrganizationLocationObj {
  _id: String!
  organizationId: String!
  name: String
  state: String!
  city: String!
  street: String!
  number: String!
  complement: String
  postalCode: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type OrganizationObj {
  _id: String!
  name: String!
  businessSegment: String!
  businessRepresentantId: String
  locations: [OrganizationLocationObj!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccountConfirmationOutput {
  _id: String!
  organizationId: String!
  accountStatus: String!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CreateUserInvitationOutput {
  _id: String!
  organizationId: String!
  email: String!
  accountStatus: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserAuthData {
  accessToken: String!
}

type LoginUserOutput {
  _id: String!
  auth: UserAuthData!
  organizationId: String!
  firstName: String!
  lastName: String!
  accountStatus: String!
  email: String!
  phoneNumber: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GetUserOutput {
  _id: String!
  organizationId: String!
  accountStatus: String!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Category {
  _id: String!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Product {
  _id: String!
  isActive: Boolean!
  name: String!
  description: String
  originalPrice: Float!
  promotionalPrice: Float
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CustomerObj {
  _id: String!
  organizationId: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Query {
  me: GetUserOutput!
  getOrganization(input: GetOrganizationInput!): OrganizationObj!
}

input GetOrganizationInput {
  organizationId: String!
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
  createUserInvitation(input: CreateUserInvitationInput!): CreateUserInvitationOutput!
  confirmAccount(input: AccountConfirmationInput!): AccountConfirmationOutput!
  login(input: LoginUserInput!): LoginUserOutput!
  createOrganization(input: CreateOrganizationInput!): OrganizationObj!
  createOrganizationLocation(input: CreateOrganizationLocationInput!): OrganizationLocationObj!
  createCategory(input: CreateCategoryInput!): Category!
  createCustomer(input: CreateCustomerInput!): CustomerObj!
}

input CreateProductInput {
  name: String!
  description: String
  isActive: Boolean!
  originalPrice: Float!
  promotionalPrice: Float
  categoryIds: [String]
}

input CreateUserInvitationInput {
  organizationId: String!
  email: String!
}

input AccountConfirmationInput {
  _id: String!
  firstName: String!
  lastName: String!
  phoneNumber: String
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateOrganizationInput {
  name: String!
  representantEmail: String!
  businessSegment: String!
}

input CreateOrganizationLocationInput {
  name: String
  state: String!
  city: String!
  street: String!
  number: String!
  complement: String
  postalCode: String!
}

input CreateCategoryInput {
  name: String!
  description: String
}

input CreateCustomerInput {
  organizationId: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String!
}